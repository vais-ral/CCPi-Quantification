/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class CCPiConsoleUserInterface extends CCPiUserApplicationInterface {
  private long swigCPtr;

  protected CCPiConsoleUserInterface(long cPtr, boolean cMemoryOwn) {
    super(CCPiAccessibleVolumeJNI.CCPiConsoleUserInterface_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CCPiConsoleUserInterface obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CCPiAccessibleVolumeJNI.delete_CCPiConsoleUserInterface(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void LogMessage(String message) {
    CCPiAccessibleVolumeJNI.CCPiConsoleUserInterface_LogMessage(swigCPtr, this, message);
  }

  public void SetStatusMessage(String message) {
    CCPiAccessibleVolumeJNI.CCPiConsoleUserInterface_SetStatusMessage(swigCPtr, this, message);
  }

  public void SetProgressValue(float value) {
    CCPiAccessibleVolumeJNI.CCPiConsoleUserInterface_SetProgressValue(swigCPtr, this, value);
  }

  public boolean isCancel() {
    return CCPiAccessibleVolumeJNI.CCPiConsoleUserInterface_isCancel(swigCPtr, this);
  }

  public CCPiConsoleUserInterface() {
    this(CCPiAccessibleVolumeJNI.new_CCPiConsoleUserInterface(), true);
  }

}
